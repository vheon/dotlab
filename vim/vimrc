" Use Vim settings, rather then Vi settings (much better!).
" This must be first, because it changes other options as a side effect.
set nocompatible
filetype off

set rtp+=~/.vim/bundle/vundle/
call vundle#rc()

let $MYVIMRC = resolve(expand('<sfile>:p'))
let g:dotvim = fnamemodify($MYVIMRC, ':h')

runtime! macros/matchit.vim

Bundle 'gmarik/vundle'

Bundle 'vheon/vim-colors-solarized'

Bundle 'Lokaltog/vim-powerline'

Bundle 'tpope/vim-surround'
Bundle 'tpope/vim-sleuth'
Bundle 'tpope/vim-repeat'
Bundle 'tpope/vim-commentary'
Bundle 'tpope/vim-unimpaired'
Bundle 'scrooloose/nerdtree'
Bundle 'godlygeek/tabular'
Bundle 'SirVer/ultisnips'
Bundle 'sjl/gundo.vim'
Bundle 'kana/vim-smartinput'
Bundle 'vheon/YouCompleteMe'


" =============== General Config ===============

" Turn on the syntax highlighting
syntax on

set encoding=utf-8
set showcmd
set showmode
set backspace=indent,eol,start
set history=1000
set undolevels=1000
set number
set shortmess=atI
set autochdir
set autoread
set cursorline
set hidden
set t_Co=16

colorscheme solarized
set background=dark

" Lower a little bit the timeout
set ttimeout
set timeoutlen=500
set ttimeoutlen=50

" =============== Turn Off Swap Files ===============

set noswapfile
set nobackup
set nowb

" =============== Search Settings ===============

set hlsearch
set incsearch
set ignorecase
set smartcase

" =========== Disable Sound and Visual Errors ===========

set noerrorbells
set novisualbell
set vb t_vb=

" =============== Indentation ===============

set autoindent
set copyindent
set smartindent
set smarttab
set shiftwidth=4
set tabstop=4
set softtabstop=4
set expandtab

set foldmethod=marker
"
"Display non visible characters, (tab, end of line and white spaces)
set list
set listchars=tab:▸\ ,eol:¬,trail:·,precedes:…,extends:…
set showbreak=↩\ 


set nowrap

" Reactivate the filetype recognition on indentation and plugins
filetype on
filetype indent on
filetype plugin on

" usefull for mapping Alt key on linux
set winaltkeys=no

" =============== Completion ===============

set wildmode=list:longest
set wildmenu
set wildignore=*.o,*.obj,*~
set wildignore+=*DS_Store*
set wildignore+=*.png,*.jpg,*.jpeg,*.gif
set wildignore+=*.mkv,*.avi

" =============== Scrolling ===============

set scrolloff=8
set sidescrolloff=7

" =============== Mouse ===============
if has('mouse')
    set mouse=a
endif


set statusline=%F%m%r%h%w\ [Format:\ %{&ff}]\ [Type:\ %Y]\ [Lines:\ %L\ @\ %p%%\ {%l;%v}]
set laststatus=2
set cmdheight=2


" TODO: find a better approach with this
"       maybe anoterh location?
"
" Guard if for not load autocommand twice
if has('autocmd')

    augroup cursor_line
        au!
        au BufEnter,WinEnter,InsertLeave * set cursorline
        au BufLeave,WinLeave,InsertEnter * set nocursorline
    augroup END

    augroup cursor_shape
        au!
        au InsertEnter * silent execute "!gconftool-2 --type string --set /apps/gnome-terminal/profiles/Default/cursor_shape ibeam"
        au VimEnter,VimLeave,InsertLeave * silent execute "!gconftool-2 --type string --set /apps/gnome-terminal/profiles/Default/cursor_shape block"
    augroup END
    
    augroup startup_filetype
        au!
        au BufNewFile,BufRead *.startup set ft=startup
    augroup END

endif


" ========================================
" General vim sanity improvements
" ========================================
"
"
" Change the mapleader from \ to ,
let mapleader=","

"make Y consistent with C and D
nnoremap Y y$

" ========================================
" RSI Prevention - keyboard remaps
" ========================================
" Certain things we do every day as programmers stress
" out our hands. For example, typing underscores and
" dashes are very common, and in position that require
" a lot of hand movement. Vim to the rescue

imap <silent> <M-k> _
imap <silent> <M-d> _
imap <silent> <M-K> -
imap <silent> <M-D> -
cnoremap <M-k> _
cnoremap <M-d> _
cnoremap <M-K> -
cnoremap <M-D> -

" ========================================
" Not use the arrow key in command line
" ========================================

cnoremap <C-j> <Down>
cnoremap <C-k> <Up>
cnoremap <C-h> <Left>
cnoremap <C-l> <Right>


" Remap ESC to a better shortcut. I've never type 'jj' anyway
imap jj <ESC>
cmap jj <c-c>

" =======================================
"           Split Manipulation
" =======================================
" Easy splits navigation
map gh <C-w>h
map gj <C-w>j
map gk <C-w>k
map gl <C-w>l

" ============================
" Shortcuts for everyday tasks
" ============================

" Clean the last search
if exists(":nohls")
    nnoremap <silent> <C-L> :nohls<CR><C-L>
endif

" Quickly edit/reload the vimrc file
nmap <silent> <leader>ev :e $MYVIMRC<CR>
nmap <silent> <leader>sv :so $MYVIMRC<CR>

" Quickly run the macro in the register q
nnoremap <Space> @q

" visual shifting (does not exit Visual mode)
vnoremap < <gv
vnoremap > >gv

" Make selecting inside an HTML tag better
" TODO: maybe move this lines
vnoremap <silent> it itVkoj
vnoremap <silent> at atV

" Sudo to write
" stolen from Steve Losh
" cmap w!! w !sudo tee % >/dev/null
command! W exec 'w !sudo tee % > /dev/null' | e!

" NERDTree
let NERDTreeMinimalUI=1
let NERDTreeQuitOnOpen=1
map <C-f> :NERDTreeToggle<cr>

" ultisnips
let g:UltiSnipsEditSplit="vertical"


let g:ycm_global_ycm_extra_conf = g:dotvim.'/ycm.py'
let g:ycm_key_list_select_completion = ['<C-n>']
let g:ycm_key_list_previous_completion = ['<C-n>']
let g:ycm_autoclose_preview_window_after_completion = 1
let g:ycm_autoclose_preview_window_after_insertion = 1
